//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfServiceLibrary1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllClients", ReplyAction="http://tempuri.org/IService1/AllClientsResponse")]
        System.Data.DataSet AllClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllClients", ReplyAction="http://tempuri.org/IService1/AllClientsResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClient", ReplyAction="http://tempuri.org/IService1/GetClientResponse")]
        System.Data.DataSet GetClient(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetClient", ReplyAction="http://tempuri.org/IService1/GetClientResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetClientAsync(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsClient", ReplyAction="http://tempuri.org/IService1/InsClientResponse")]
        string InsClient(string fio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsClient", ReplyAction="http://tempuri.org/IService1/InsClientResponse")]
        System.Threading.Tasks.Task<string> InsClientAsync(string fio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelClient", ReplyAction="http://tempuri.org/IService1/DelClientResponse")]
        string DelClient(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelClient", ReplyAction="http://tempuri.org/IService1/DelClientResponse")]
        System.Threading.Tasks.Task<string> DelClientAsync(int idClient);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdClient", ReplyAction="http://tempuri.org/IService1/UpdClientResponse")]
        string UpdClient(int idClient, string fio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdClient", ReplyAction="http://tempuri.org/IService1/UpdClientResponse")]
        System.Threading.Tasks.Task<string> UpdClientAsync(int idClient, string fio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllZayavky", ReplyAction="http://tempuri.org/IService1/AllZayavkyResponse")]
        System.Data.DataSet AllZayavky();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllZayavky", ReplyAction="http://tempuri.org/IService1/AllZayavkyResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllZayavkyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetZayavka", ReplyAction="http://tempuri.org/IService1/GetZayavkaResponse")]
        System.Data.DataSet GetZayavka(int idZayavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetZayavka", ReplyAction="http://tempuri.org/IService1/GetZayavkaResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetZayavkaAsync(int idZayavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsZayavka", ReplyAction="http://tempuri.org/IService1/InsZayavkaResponse")]
        string InsZayavka(int idZayavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsZayavka", ReplyAction="http://tempuri.org/IService1/InsZayavkaResponse")]
        System.Threading.Tasks.Task<string> InsZayavkaAsync(int idZayavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelZayavka", ReplyAction="http://tempuri.org/IService1/DelZayavkaResponse")]
        string DelZayavka(int idZayavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelZayavka", ReplyAction="http://tempuri.org/IService1/DelZayavkaResponse")]
        System.Threading.Tasks.Task<string> DelZayavkaAsync(int idZayavka);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdZayavka", ReplyAction="http://tempuri.org/IService1/UpdZayavkaResponse")]
        string UpdZayavka(int idZayavka, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdZayavka", ReplyAction="http://tempuri.org/IService1/UpdZayavkaResponse")]
        System.Threading.Tasks.Task<string> UpdZayavkaAsync(int idZayavka, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllUsluga", ReplyAction="http://tempuri.org/IService1/AllUslugaResponse")]
        System.Data.DataSet AllUsluga();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllUsluga", ReplyAction="http://tempuri.org/IService1/AllUslugaResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllUslugaAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsluga", ReplyAction="http://tempuri.org/IService1/GetUslugaResponse")]
        System.Data.DataSet GetUsluga(int idUsluga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetUsluga", ReplyAction="http://tempuri.org/IService1/GetUslugaResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetUslugaAsync(int idUsluga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsUsluga", ReplyAction="http://tempuri.org/IService1/InsUslugaResponse")]
        string InsUsluga(string nazvanie, int cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsUsluga", ReplyAction="http://tempuri.org/IService1/InsUslugaResponse")]
        System.Threading.Tasks.Task<string> InsUslugaAsync(string nazvanie, int cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelUsluga", ReplyAction="http://tempuri.org/IService1/DelUslugaResponse")]
        string DelUsluga(int idUsluga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DelUsluga", ReplyAction="http://tempuri.org/IService1/DelUslugaResponse")]
        System.Threading.Tasks.Task<string> DelUslugaAsync(int idUsluga);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdUsluga", ReplyAction="http://tempuri.org/IService1/UpdUslugaResponse")]
        string UpdUsluga(int idUsluga, int cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdUsluga", ReplyAction="http://tempuri.org/IService1/UpdUslugaResponse")]
        System.Threading.Tasks.Task<string> UpdUslugaAsync(int idUsluga, int cena);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllZayavkyUslugy", ReplyAction="http://tempuri.org/IService1/AllZayavkyUslugyResponse")]
        System.Data.DataSet AllZayavkyUslugy();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AllZayavkyUslugy", ReplyAction="http://tempuri.org/IService1/AllZayavkyUslugyResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> AllZayavkyUslugyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetZayavkaUsluga", ReplyAction="http://tempuri.org/IService1/GetZayavkaUslugaResponse")]
        System.Data.DataSet GetZayavkaUsluga(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetZayavkaUsluga", ReplyAction="http://tempuri.org/IService1/GetZayavkaUslugaResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetZayavkaUslugaAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsZayavkaUsluga", ReplyAction="http://tempuri.org/IService1/InsZayavkaUslugaResponse")]
        string InsZayavkaUsluga(int zayavkaId, int uslugaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsZayavkaUsluga", ReplyAction="http://tempuri.org/IService1/InsZayavkaUslugaResponse")]
        System.Threading.Tasks.Task<string> InsZayavkaUslugaAsync(int zayavkaId, int uslugaId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfServiceLibrary1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfServiceLibrary1.ServiceReference1.IService1>, WcfServiceLibrary1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet AllClients() {
            return base.Channel.AllClients();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllClientsAsync() {
            return base.Channel.AllClientsAsync();
        }
        
        public System.Data.DataSet GetClient(int idClient) {
            return base.Channel.GetClient(idClient);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetClientAsync(int idClient) {
            return base.Channel.GetClientAsync(idClient);
        }
        
        public string InsClient(string fio) {
            return base.Channel.InsClient(fio);
        }
        
        public System.Threading.Tasks.Task<string> InsClientAsync(string fio) {
            return base.Channel.InsClientAsync(fio);
        }
        
        public string DelClient(int idClient) {
            return base.Channel.DelClient(idClient);
        }
        
        public System.Threading.Tasks.Task<string> DelClientAsync(int idClient) {
            return base.Channel.DelClientAsync(idClient);
        }
        
        public string UpdClient(int idClient, string fio) {
            return base.Channel.UpdClient(idClient, fio);
        }
        
        public System.Threading.Tasks.Task<string> UpdClientAsync(int idClient, string fio) {
            return base.Channel.UpdClientAsync(idClient, fio);
        }
        
        public System.Data.DataSet AllZayavky() {
            return base.Channel.AllZayavky();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllZayavkyAsync() {
            return base.Channel.AllZayavkyAsync();
        }
        
        public System.Data.DataSet GetZayavka(int idZayavka) {
            return base.Channel.GetZayavka(idZayavka);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetZayavkaAsync(int idZayavka) {
            return base.Channel.GetZayavkaAsync(idZayavka);
        }
        
        public string InsZayavka(int idZayavka) {
            return base.Channel.InsZayavka(idZayavka);
        }
        
        public System.Threading.Tasks.Task<string> InsZayavkaAsync(int idZayavka) {
            return base.Channel.InsZayavkaAsync(idZayavka);
        }
        
        public string DelZayavka(int idZayavka) {
            return base.Channel.DelZayavka(idZayavka);
        }
        
        public System.Threading.Tasks.Task<string> DelZayavkaAsync(int idZayavka) {
            return base.Channel.DelZayavkaAsync(idZayavka);
        }
        
        public string UpdZayavka(int idZayavka, int clientId) {
            return base.Channel.UpdZayavka(idZayavka, clientId);
        }
        
        public System.Threading.Tasks.Task<string> UpdZayavkaAsync(int idZayavka, int clientId) {
            return base.Channel.UpdZayavkaAsync(idZayavka, clientId);
        }
        
        public System.Data.DataSet AllUsluga() {
            return base.Channel.AllUsluga();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllUslugaAsync() {
            return base.Channel.AllUslugaAsync();
        }
        
        public System.Data.DataSet GetUsluga(int idUsluga) {
            return base.Channel.GetUsluga(idUsluga);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetUslugaAsync(int idUsluga) {
            return base.Channel.GetUslugaAsync(idUsluga);
        }
        
        public string InsUsluga(string nazvanie, int cena) {
            return base.Channel.InsUsluga(nazvanie, cena);
        }
        
        public System.Threading.Tasks.Task<string> InsUslugaAsync(string nazvanie, int cena) {
            return base.Channel.InsUslugaAsync(nazvanie, cena);
        }
        
        public string DelUsluga(int idUsluga) {
            return base.Channel.DelUsluga(idUsluga);
        }
        
        public System.Threading.Tasks.Task<string> DelUslugaAsync(int idUsluga) {
            return base.Channel.DelUslugaAsync(idUsluga);
        }
        
        public string UpdUsluga(int idUsluga, int cena) {
            return base.Channel.UpdUsluga(idUsluga, cena);
        }
        
        public System.Threading.Tasks.Task<string> UpdUslugaAsync(int idUsluga, int cena) {
            return base.Channel.UpdUslugaAsync(idUsluga, cena);
        }
        
        public System.Data.DataSet AllZayavkyUslugy() {
            return base.Channel.AllZayavkyUslugy();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> AllZayavkyUslugyAsync() {
            return base.Channel.AllZayavkyUslugyAsync();
        }
        
        public System.Data.DataSet GetZayavkaUsluga(int id) {
            return base.Channel.GetZayavkaUsluga(id);
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetZayavkaUslugaAsync(int id) {
            return base.Channel.GetZayavkaUslugaAsync(id);
        }
        
        public string InsZayavkaUsluga(int zayavkaId, int uslugaId) {
            return base.Channel.InsZayavkaUsluga(zayavkaId, uslugaId);
        }
        
        public System.Threading.Tasks.Task<string> InsZayavkaUslugaAsync(int zayavkaId, int uslugaId) {
            return base.Channel.InsZayavkaUslugaAsync(zayavkaId, uslugaId);
        }
    }
}
